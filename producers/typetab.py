
# typetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F8E2434465DF190592FED91CF19A24CE'
    
_lr_action_items = {'VAR':([0,9,10,13,15,16,23,24,],[6,6,6,6,6,6,6,6,]),'QUANT':([0,],[9,]),'COMMA':([1,3,5,6,7,8,11,12,14,17,19,20,21,22,25,26,28,],[-12,-16,16,-17,-10,-11,-7,-9,-8,23,16,16,16,16,-6,-14,16,]),'BASE':([0,10,13,15,16,24,],[3,3,3,3,3,3,]),'DOT':([6,17,18,27,],[-17,-4,24,-5,]),'CLOSE':([1,3,6,7,8,11,12,14,19,21,22,25,26,],[-12,-16,-17,-10,-11,-7,-9,-8,25,-13,-15,-6,-14,]),'TO':([1,3,5,6,7,8,11,12,14,19,20,21,22,25,26,28,],[-12,-16,15,-17,-10,-11,-7,-9,-8,15,15,15,15,-6,-14,15,]),'$end':([1,2,3,4,5,6,7,8,11,12,14,21,22,25,26,28,],[-12,-2,-16,0,-1,-17,-10,-11,-7,-9,-8,-13,-15,-6,-14,-3,]),'OPENLIST':([0,10,13,15,16,24,],[13,13,13,13,13,13,]),'OPEN':([0,10,13,15,16,24,],[10,10,10,10,10,10,]),'CLOSELIST':([1,3,6,7,8,11,12,14,20,21,22,25,26,],[-12,-16,-17,-10,-11,-7,-9,-8,26,-13,-15,-6,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,10,13,15,16,24,],[7,7,7,7,7,7,]),'pair':([0,10,13,15,16,24,],[1,1,1,1,1,1,]),'poly':([0,],[2,]),'base':([0,10,13,15,16,24,],[11,11,11,11,11,11,]),'mono':([0,10,13,15,16,24,],[5,19,20,21,22,28,]),'type':([0,],[4,]),'list':([0,10,13,15,16,24,],[8,8,8,8,8,8,]),'constructor':([0,10,13,15,16,24,],[12,12,12,12,12,12,]),'var':([0,9,10,13,15,16,23,24,],[14,17,14,14,14,14,17,14,]),'varlist':([9,23,],[18,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> type","S'",1,None,None,None),
  ('type -> mono','type',1,'p_type','components.py',35),
  ('type -> poly','type',1,'p_type','components.py',36),
  ('poly -> QUANT varlist DOT mono','poly',4,'p_poly','components.py',40),
  ('varlist -> var','varlist',1,'p_varlist','components.py',44),
  ('varlist -> var COMMA varlist','varlist',3,'p_varlist','components.py',45),
  ('mono -> OPEN mono CLOSE','mono',3,'p_mono','components.py',52),
  ('mono -> base','mono',1,'p_mono','components.py',53),
  ('mono -> var','mono',1,'p_mono','components.py',54),
  ('mono -> constructor','mono',1,'p_mono','components.py',55),
  ('constructor -> function','constructor',1,'p_constructor','components.py',62),
  ('constructor -> list','constructor',1,'p_constructor','components.py',63),
  ('constructor -> pair','constructor',1,'p_constructor','components.py',64),
  ('function -> mono TO mono','function',3,'p_function','components.py',68),
  ('list -> OPENLIST mono CLOSELIST','list',3,'p_list','components.py',72),
  ('pair -> mono COMMA mono','pair',3,'p_pair','components.py',76),
  ('base -> BASE','base',1,'p_base','components.py',80),
  ('var -> VAR','var',1,'p_var','components.py',86),
]


# /afs/cs.wisc.edu/u/c/j/cjsmith/summer/map-reduce-synth/takethree/norm/eqparsing.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'A8D2D63F0856B69F482FF541A2B6489E'
    
_lr_action_items = {'ID':([0,7,8,10,11,16,20,23,24,27,],[5,12,12,17,12,21,12,29,12,21,]),'DEFINES':([5,],[9,]),'EQ':([2,5,12,14,25,],[7,-12,-12,20,-11,]),'COLON':([3,17,30,],[8,-7,-8,]),'LPAREN':([5,12,],[11,11,]),'LBRACKET':([9,],[16,]),'IN':([5,29,],[10,10,]),'RPAREN':([12,18,19,25,31,],[-12,-9,25,-11,-10,]),'$end':([1,4,6,12,13,15,25,26,28,],[0,-1,-2,-12,-14,-3,-11,-13,-4,]),'RBRACKET':([21,22,32,],[-5,28,-6,]),'COMMA':([12,17,18,21,25,],[-12,23,24,27,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'set_list':([16,27,],[22,32,]),'start':([0,],[1,]),'set':([9,],[15,]),'equation':([0,],[6,]),'term':([0,7,8,11,20,24,],[2,13,14,18,26,18,]),'condition':([0,23,],[3,30,]),'set_descriptor':([0,],[4,]),'arg_list':([11,24,],[19,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> set_descriptor','start',1,'p_input_sets','eqparser.py',33),
  ('start -> equation','start',1,'p_input_eqs','eqparser.py',37),
  ('set_descriptor -> ID DEFINES set','set_descriptor',3,'p_set_descriptor','eqparser.py',42),
  ('set -> LBRACKET set_list RBRACKET','set',3,'p_set','eqparser.py',46),
  ('set_list -> ID','set_list',1,'p_set_list_base','eqparser.py',50),
  ('set_list -> ID COMMA set_list','set_list',3,'p_set_list_list','eqparser.py',54),
  ('condition -> ID IN ID','condition',3,'p_condition_base','eqparser.py',60),
  ('condition -> ID IN ID COMMA condition','condition',5,'p_condition_list','eqparser.py',64),
  ('arg_list -> term','arg_list',1,'p_arg_list_base','eqparser.py',70),
  ('arg_list -> term COMMA arg_list','arg_list',3,'p_arg_list_list','eqparser.py',74),
  ('term -> ID LPAREN arg_list RPAREN','term',4,'p_term_second_order','eqparser.py',78),
  ('term -> ID','term',1,'p_term_constant','eqparser.py',82),
  ('equation -> condition COLON term EQ term','equation',5,'p_equation','eqparser.py',88),
  ('equation -> term EQ term','equation',3,'p_equation_unconditional','eqparser.py',92),
]
